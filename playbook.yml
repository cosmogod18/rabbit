--- 
- 
  handlers: 
    - 
      name: "systemctl daemon-reload"
      systemd: 
        daemon_reload: true
    - 
      name: restart-rabbitmq
      service: 
        name: rabbitmq-server
        state: restarted
        
  hosts: all
  remote_user: root
  tasks: 
    - 
      apt: 
        name: git
        state: present
      name: "Install git"
    - 
      apt: 
        name: ufw
        state: present
      name: "Install ufw (iptables frontend)"
    - 
      name: "Turn off ufw logging"
      ufw: 
        logging: "off"
    - 
      name: "Allow SSH connection"
      ufw: 
        name: OpenSSH
        rule: allow
    - 
      name: "Allow RabbitMQ HTTP connection"
      ufw: 
        port: "15672"
        proto: tcp
        rule: allow
    - 
      name: "Enable ufw after restart with DENY policy"
      ufw: 
        policy: deny
        state: enabled
    - 
      git: 
        dest: /opt/rabbit/
        force: true
        repo: "https://github.com/cosmogod18/rabbit"
      name: "Donwload installation scripts from github repo"
    - 
      name: "Execute RabbitMQ and erlang install scripts"
      shell: 
        chdir: /opt/rabbit/
        cmd: "bash /opt/rabbit/rabbitmq-erlang-installer.sh"
    - 
      file: 
        path: /etc/systemd/system/rabbitmq-server.service.d
        state: directory
      name: "Create systemd rabbitmq directory"
    - 
      name: "Configure RabbitMQ limits.conf file"
      notify: "systemctl daemon-reload"
      shell: 
        cmd: "mv /opt/rabbit/limits.conf /etc/systemd/system/rabbitmq-server.service.d/"
    - 
      name: "Update RabbitMQ conf file"
      notify: restart-rabbitmq
      shell: 
        cmd: "mv /opt/rabbit/rabbitmq.conf /etc/rabbitmq/"
    - 
      name: "Delete guest user"
      no_log: true
      rabbitmq_user: 
        state: absent
        user: guest
    - 
      name: "Enable RabbitMQ managemnt"
      rabbitmq_plugin: 
        names: rabbitmq_management
        state: enabled
    - 
      name: "Create virtual host \"/myvirtualhost\""
      rabbitmq_vhost: 
        name: /myvirtualhost
        state: present
    - 
      name: "create user testuser"
      no_log: true
      rabbitmq_user: 
        configure_priv: .*
        password: "{{ password }}"
        read_priv: .*
        state: present
        tags: administrator
        user: testuser
        vhost: /myvirtualhost
        write_priv: .*
    - 
      command: "python3 /opt/rabbit/publisher.py"
      name: "execute publisher script"
  
  vars_files: 
    - password.yml
